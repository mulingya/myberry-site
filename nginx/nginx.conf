
user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    proxy_hide_header X-Powered-By;
    access_log off;
    server_tokens off;
    autoindex off;
    sendfile off;

    #tcp_nopush     on;
    #gzip  on;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    
    #access_log  /var/log/nginx/access.log  main;
    

    keepalive_timeout  65;
    include /etc/nginx/conf.d/*.conf;

    ## Basic reverse proxy server ##
    upstream tomcat  {
    	server localhost:9307;
    }

    server { 
	listen 80;
	server_name myberry.org;
	return 301 https://$host$request_uri;
    }	
    server {
    	
	listen 443 ssl http2;
	server_name myberry.org;
         
        #ssl_certificate
        #ssl_certificate_key

    	## send request back to apache ##
    	location / {
       	
	 proxy_pass  http://tomcat;

	
	 #Security hardening
	 if ($http_user_agent ~* "java|python|perl|ruby|curl|bash|echo|uname|base64|decode|md5sum|select|concat|httprequest|httpclient|nmap|scan" ) {
    		return 403;
	 }

	 if ($request_method !~ ^(GET|POST|HEAD)$ ) {
    		return 405;
	 }
 
	 if ($http_range ~ "\d{9,}") {
    		return 444;
	 }



       	 #Proxy Settings
       	 proxy_redirect     off;
       	 proxy_set_header   Host             $host;
       	 proxy_set_header   X-Real-IP        $remote_addr;
       	 proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
       	 proxy_max_temp_file_size 0;
       	 proxy_connect_timeout      90;
       	 proxy_send_timeout         90;
       	 proxy_read_timeout         90;
       	 proxy_buffer_size          4k;
       	 proxy_buffers              4 32k;
       	 proxy_busy_buffers_size    64k;
       	 proxy_temp_file_write_size 64k;
        }
    }
}
